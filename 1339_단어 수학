"""
처음 생각했던 알고리즘은, 각각의 문자열을 입력받아 저장해놓고, 
각각의 자릿수를 동시에 비교하면서 각 자릿수마다 가장 많이 나온 알파벳에 높은 숫자를 차례대로 부여하려고 했다.
이 때 문제는 구현이 힘들 뿐만 아니라, 만약 천의자리에서 D와 E가 한번씩 나왔을 경우 백의자리, 혹은 십의자리에서
D와 E중 어떤 것이 더 많이, 더 먼저 나오는지를 파악하여 조정해줘야 하는데 사실상 이를 구현하는 것은 올바른 풀이 방법이 아니라고 생각했다.


참고한 알고리즘은 다음과 같다.
각각의 알파벳에 대해서 중요도를 계산한 후, 중요도가 높은 순서대로 9부터 0까지 내려가면서 수를 대응시켜준다.
중요도를 계산하는 방법은 다음과 같다.
각각의 입력에 대해서 만약에 A가 천의자리에서 한번, 일의자리에서 한번 나왔다면 A의 중요도는1001이다
B가 백의자리에서 한번, 일의자리에서 세번 나왔다면 B의 중요도는 103이다.
"""


n=int(input())
a=[]
for _ in range(n):
	a.append(list(input()))

alpha=[]
for _ in range(26):
	alpha.append(0)

#각각의 단어에 대해서 일의자리부터 대응하는 알파벳 자리에 자릿수 중요도를 추가
for i in range(n):
	for j in range(len(a[i])):
		alp=ord(a[i][j])-ord('A')
		length=len(a[i])
		b=10**(length-j-1)
		alpha[alp]+=b
alpha.sort()
alpha.reverse()
sum=0
for i in range(10):
	sum+=alpha[i]*(9-i)

print(sum)
