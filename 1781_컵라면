"""
전형적인 데드라인-최대값 문제이다.
각 문제마다 데드라인이 정해져있고, 문제를 맞힐 경우 정해진 수의 컵라면(=점수)가 주어진다.
문제를 풀 때마다 단위 시간이 1씩 걸린다.

위의 문제는 heap을 이용하여 풀 수 있다.
먼저 입력받은 데이터들을 "데드라인" 오름차순으로 정렬한다.
그 후, 정렬된 데이터들을 heap에 push한다.
데드라인이 1일 경우에는 len(데이터집합)이 1을 초과해선 안되며, 최대값만 남겨야 하므로 pop한다.
데드라인이 늘어날 수록 len(데이터집합)의 제한을 그만큼 늘려준다.
여러번 풀어본 알고리즘 유형임에 따라서 상당히 빠르게, 참고없이 해결할 수 있었다.
"""

import sys
import heapq
input=sys.stdin.readline

n=int(input())
data=[]
for _ in range(n):
	data.append(list(map(int, input().split())))
data=sorted(data, key=lambda x:x[0])


anslist=[]
for i in range(n):
	heapq.heappush(anslist,data[i][1])
	if len(anslist)>data[i][0]:
		heapq.heappop(anslist)

print(sum(anslist))
